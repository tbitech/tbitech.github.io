{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/auth.guard.ts","webpack:///./src/app/core/auth.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/notify.service.ts","webpack:///./src/app/machines/machine-details/machine-details.component.html","webpack:///./src/app/machines/machine-details/machine-details.component.scss","webpack:///./src/app/machines/machine-details/machine-details.component.ts","webpack:///./src/app/machines/machines-list/machines-list.component.html","webpack:///./src/app/machines/machines-list/machines-list.component.scss","webpack:///./src/app/machines/machines-list/machines-list.component.ts","webpack:///./src/app/machines/machines.module.ts","webpack:///./src/app/machines/machines.service.ts","webpack:///./src/app/monitoring/monitoring-detail/monitoring-detail.component.html","webpack:///./src/app/monitoring/monitoring-detail/monitoring-detail.component.scss","webpack:///./src/app/monitoring/monitoring-detail/monitoring-detail.component.ts","webpack:///./src/app/monitoring/monitoring-list/monitoring-list.component.html","webpack:///./src/app/monitoring/monitoring-list/monitoring-list.component.scss","webpack:///./src/app/monitoring/monitoring-list/monitoring-list.component.ts","webpack:///./src/app/monitoring/monitoring.module.ts","webpack:///./src/app/notes/note-detail/note-detail.component.html","webpack:///./src/app/notes/note-detail/note-detail.component.scss","webpack:///./src/app/notes/note-detail/note-detail.component.ts","webpack:///./src/app/notes/notes-list/notes-list.component.html","webpack:///./src/app/notes/notes-list/notes-list.component.scss","webpack:///./src/app/notes/notes-list/notes-list.component.ts","webpack:///./src/app/notes/notes.module.ts","webpack:///./src/app/notes/notes.service.ts","webpack:///./src/app/presentation/en/en.component.html","webpack:///./src/app/presentation/en/en.component.scss","webpack:///./src/app/presentation/en/en.component.ts","webpack:///./src/app/presentation/fi/fi.component.html","webpack:///./src/app/presentation/fi/fi.component.scss","webpack:///./src/app/presentation/fi/fi.component.ts","webpack:///./src/app/presentation/presentation.module.ts","webpack:///./src/app/ui/about-page/about-page.component.html","webpack:///./src/app/ui/about-page/about-page.component.scss","webpack:///./src/app/ui/about-page/about-page.component.ts","webpack:///./src/app/ui/contact-page/contact-page.component.html","webpack:///./src/app/ui/contact-page/contact-page.component.scss","webpack:///./src/app/ui/contact-page/contact-page.component.ts","webpack:///./src/app/ui/home-page/home-page.component.html","webpack:///./src/app/ui/home-page/home-page.component.scss","webpack:///./src/app/ui/home-page/home-page.component.ts","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.html","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.scss","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.ts","webpack:///./src/app/ui/logos/logos.component.html","webpack:///./src/app/ui/logos/logos.component.scss","webpack:///./src/app/ui/logos/logos.component.ts","webpack:///./src/app/ui/main-nav/main-nav.component.html","webpack:///./src/app/ui/main-nav/main-nav.component.scss","webpack:///./src/app/ui/main-nav/main-nav.component.ts","webpack:///./src/app/ui/notification-message/notification-message.component.html","webpack:///./src/app/ui/notification-message/notification-message.component.scss","webpack:///./src/app/ui/notification-message/notification-message.component.ts","webpack:///./src/app/ui/ssr-page/ssr-page.component.html","webpack:///./src/app/ui/ssr-page/ssr-page.component.scss","webpack:///./src/app/ui/ssr-page/ssr-page.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/app/ui/user-form/user-form.component.html","webpack:///./src/app/ui/user-form/user-form.component.scss","webpack:///./src/app/ui/user-form/user-form.component.ts","webpack:///./src/app/ui/user-login/user-login.component.html","webpack:///./src/app/ui/user-login/user-login.component.scss","webpack:///./src/app/ui/user-login/user-login.component.ts","webpack:///./src/app/ui/user-profile/user-profile.component.html","webpack:///./src/app/ui/user-profile/user-profile.component.scss","webpack:///./src/app/ui/user-profile/user-profile.component.ts","webpack:///./src/app/uploads/drop-zone.directive.ts","webpack:///./src/app/uploads/file-size.pipe.ts","webpack:///./src/app/uploads/upload-page/upload-page.component.html","webpack:///./src/app/uploads/upload-page/upload-page.component.scss","webpack:///./src/app/uploads/upload-page/upload-page.component.ts","webpack:///./src/app/uploads/uploads.module.ts","webpack:///./src/app/users/user-details/user-details.component.html","webpack:///./src/app/users/user-details/user-details.component.scss","webpack:///./src/app/users/user-details/user-details.component.ts","webpack:///./src/app/users/user-list/user-list.component.html","webpack:///./src/app/users/user-list/user-list.component.scss","webpack:///./src/app/users/user-list/user-list.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuard } from './core/auth.guard';\r\nimport { UserLoginComponent } from './ui/user-login/user-login.component';\r\nimport { HomePageComponent } from './ui/home-page/home-page.component';\r\nimport { NotesListComponent } from './notes/notes-list/notes-list.component';\r\nimport { UploadPageComponent } from './uploads/upload-page/upload-page.component';\r\nimport { UserListComponent } from './users/user-list/user-list.component';\r\nimport { MachinesListComponent } from './machines/machines-list/machines-list.component';\r\nimport { MonitoringListComponent } from './monitoring/monitoring-list/monitoring-list.component';\r\nimport { EnComponent } from './presentation/en/en.component';\r\nimport { FiComponent } from './presentation/fi/fi.component';\r\nimport { AboutPageComponent } from './ui/about-page/about-page.component';\r\nimport { ContactPageComponent } from './ui/contact-page/contact-page.component';\r\n\r\nimport { SsrPageComponent } from './ui/ssr-page/ssr-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'login', component: UserLoginComponent },\r\n  { path: 'contact', component: ContactPageComponent },\r\n  { path: 'about', component: AboutPageComponent },\r\n  { path: 'notes', component: NotesListComponent,  canActivate: [AuthGuard] },\r\n  { path: 'uploads',  component: UploadPageComponent,  canActivate: [AuthGuard] },\r\n  { path: 'users',  component: UserListComponent,  canActivate: [AuthGuard] },\r\n  { path: 'machines',  component: MachinesListComponent,  canActivate: [AuthGuard] },\r\n  { path: 'monitoring',  component: MonitoringListComponent,  canActivate: [AuthGuard] },\r\n  { path: 'presentation/en',  component: EnComponent,  canActivate: [AuthGuard] },\r\n  { path: 'presentation/fi',  component: FiComponent,  canActivate: [AuthGuard] },\r\n  { path: 'ssr', component: SsrPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div id=\\\"wrapper\\\" class=\\\"content\\\">\\r\\n    <main-nav></main-nav>\\r\\n\\r\\n    <div class=\\\"columns\\\">\\r\\n        <aside class=\\\"column is-2\\\">\\r\\n            <user-profile></user-profile>\\r\\n        </aside>\\r\\n\\r\\n        <main class=\\\"column is-8\\\">\\r\\n           \\r\\n   \\r\\n            <notification-message></notification-message>\\r\\n\\r\\n            <router-outlet></router-outlet>\\r\\n        </main>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <footer class=\\\"footer\\\">\\r\\n        <!--Partner logos-->\\r\\n        <logos></logos>\\r\\n        <p>   \\r\\n         <a routerLink=\\\"/\\\">\\r\\n            <img src=\\\"assets/totech_logo.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\" alt=\\\"TOTECH\\\" />\\r\\n        </a>\\r\\n       <i><b> Web Application</b></i></p>\\r\\n        <p>&copy; CopyRight www.totech.fi 2018</p>    \\r\\n    </footer>\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  constructor(private auth: AuthService) {}\r\n}\r\n","import {\r\n  BrowserModule,\r\n  BrowserTransferStateModule\r\n} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n// Firestarter App Modules\r\nimport { CoreModule } from './core/core.module';\r\nimport { UploadsModule } from './uploads/uploads.module';\r\nimport { UiModule } from './ui/ui.module';\r\nimport { NotesModule } from './notes/notes.module';\r\nimport { UsersModule } from './users/users.module';\r\nimport { MachinesModule } from './machines/machines.module';\r\nimport { MonitoringModule } from './monitoring/monitoring.module';\r\nimport { PresentationModule } from './presentation/presentation.module';\r\n\r\n// AngularFire2 Modules\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { AngularFireStorageModule } from 'angularfire2/storage';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\n//import { AngularFireFunctionsModule } from 'angularfire2/functions';\r\n\r\n//Angular Material\r\n//import { MaterialModule } from './material/material.module';\r\n\r\n\r\n// IMPORTANT\r\n// Add your own project credentials to environments/*.ts\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    BrowserTransferStateModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    NgbModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CoreModule,\r\n    UiModule,\r\n    NotesModule,\r\n    UsersModule,\r\n    MachinesModule,\r\n    MonitoringModule,\r\n    PresentationModule,\r\n    UploadsModule,\r\n    AngularFireModule.initializeApp(environment.firebase, 'firestarter'),\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    AngularFireStorageModule,\r\n    //AngularFireFunctionsModule,\r\n    \r\n    ServiceWorkerModule.register('/ngsw-worker.js', {\r\n      enabled: environment.production\r\n    }),\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take, tap } from 'rxjs/operators';\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AuthService } from './auth.service';\r\nimport { NotifyService } from './notify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private notify: NotifyService\r\n  ) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      map(user => !!user),\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          console.log('access denied');\r\n          this.notify.update('You must be logged in!', 'error');\r\n          this.router.navigate(['/login']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { firebase } from '@firebase/app';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument\r\n} from 'angularfire2/firestore';\r\nimport { NotifyService } from './notify.service';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, startWith, tap, filter } from 'rxjs/operators';\r\nimport { isAdmin } from '../../../node_modules/@firebase/util';\r\nimport { UsersService } from '../users/users.service';\r\n\r\ninterface User {\r\n  uid: string;\r\n  email?: string | null;\r\n  photoURL?: string;\r\n  displayName?: string;\r\n  isAdmin?: boolean;\r\n  company?: string;\r\n  phone?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  user: Observable<User | null>;\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private afs: AngularFirestore,\r\n    private router: Router,\r\n    private notify: NotifyService,\r\n    private usrservice: UsersService\r\n  ) {\r\n    this.user = this.afAuth.authState.pipe(\r\n      switchMap(user => {\r\n        if (user) {\r\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n      // tap(user => localStorage.setItem('user', JSON.stringify(user))),\r\n      // startWith(JSON.parse(localStorage.getItem('user')))\r\n    );\r\n  }\r\n\r\n  ////// OAuth Methods /////\r\n\r\n  googleLogin() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return this.oAuthLogin(provider);\r\n  }\r\n\r\n  githubLogin() {\r\n    const provider = new firebase.auth.GithubAuthProvider();\r\n    return this.oAuthLogin(provider);\r\n  }\r\n\r\n  facebookLogin() {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    return this.oAuthLogin(provider);\r\n  }\r\n\r\n  twitterLogin() {\r\n    const provider = new firebase.auth.TwitterAuthProvider();\r\n    return this.oAuthLogin(provider);\r\n  }\r\n\r\n  private oAuthLogin(provider: any) {\r\n    return this.afAuth.auth\r\n      .signInWithPopup(provider)\r\n      .then(credential => {\r\n        this.notify.update('Welcome to TOTECH web application!!!', 'success');\r\n        return this.updateUserData(credential.user);\r\n      })\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  //// Anonymous Auth ////\r\n\r\n  anonymousLogin() {\r\n    return this.afAuth.auth\r\n      .signInAnonymously()\r\n      .then(credential => {\r\n        this.notify.update('Welcome to TOTECH web application!!!', 'success');\r\n        return this.updateUserData(credential.user); // if using firestore\r\n      })\r\n      .catch(error => {\r\n        this.handleError(error);\r\n      });\r\n  }\r\n\r\n  //// Email/Password Auth ////\r\n\r\n  emailSignUp(name: string, company: string, phone: string, email: string, password: string) {\r\n    return this.afAuth.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(credential => {\r\n        this.notify.update('Welcome new user!', 'success');\r\n        return this.newupdateUserData(credential.user, name, company, phone); // if using firestore\r\n      })\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  emailLogin(email: string, password: string) {\r\n    return this.afAuth.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(credential => {\r\n        this.notify.update('Welcome back!', 'success');\r\n        return this.updateUserData(credential.user);\r\n      })\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  // Sends email allowing user to reset password\r\n  resetPassword(email: string) {\r\n    const fbAuth = firebase.auth();\r\n\r\n    return fbAuth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => this.notify.update('Password update email sent', 'info'))\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  signOut() {\r\n    this.afAuth.auth.signOut().then(() => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  // If error, console log and notify user\r\n  private handleError(error: Error) {\r\n    console.error(error);\r\n    this.notify.update(error.message, 'error');\r\n  }\r\n\r\n  // Sets user data to firestore after succesful login\r\n  private updateUserData(user: User) {\r\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(\r\n      `users/${user.uid}`\r\n    );\r\n\r\n    const data: User = {\r\n      uid: user.uid,\r\n      email: user.email || null,\r\n      photoURL: user.photoURL || '',\r\n    };\r\n    return userRef.set(data, { merge: true });\r\n  }\r\n\r\n    // Sets user data to firestore after succesful signuplogin\r\n    private newupdateUserData(user: User, name: string, company: string, phone: string) {\r\n      const userRef: AngularFirestoreDocument<User> = this.afs.doc(\r\n        `users/${user.uid}`\r\n      );\r\n  \r\n      const data: User = {\r\n        uid: user.uid,\r\n        email: user.email || null,\r\n        displayName: user.displayName || name,\r\n        photoURL: user.photoURL || '',\r\n        company: user.company || company,\r\n        phone: user.phone || phone,\r\n      };\r\n      return userRef.set(data, { merge: true });\r\n    }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from './auth.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { NotifyService } from './notify.service';\r\n\r\n@NgModule({\r\n  providers: [AuthService, AuthGuard, NotifyService]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\n/// Notify users about errors and other helpful stuff\r\nexport interface Msg {\r\n  content: string;\r\n  style: string;\r\n}\r\n\r\n@Injectable()\r\nexport class NotifyService {\r\n\r\n  private _msgSource = new Subject<Msg | null>();\r\n\r\n  msg = this._msgSource.asObservable();\r\n\r\n  update(content: string, style: 'error' | 'info' | 'success') {\r\n    const msg: Msg = { content, style };\r\n    this._msgSource.next(msg);\r\n  }\r\n\r\n  clear() {\r\n    this._msgSource.next(null);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"tab-buttons\\\">\\n    <button class=\\\"button\\\" (click)=\\\"showTab('machineinfo')\\\">\\n        Machine Info\\n    </button>\\n\\n    <button class=\\\"button\\\" (click)=\\\"showTab('dinames')\\\">\\n       DI Names\\n    </button>\\n\\n    <button class=\\\"button\\\" (click)=\\\"showTab('ainames')\\\">\\n        AI Names\\n     </button>\\n\\n     <button class=\\\"button\\\" (click)=\\\"showTab('counters')\\\">\\n        Counters\\n     </button>\\n\\n     <button class=\\\"button\\\" (click)=\\\"showTab('durations')\\\">\\n        Durations\\n     </button>\\n\\n     <button class=\\\"button\\\" (click)=\\\"showTab('errorcodes')\\\">\\n        Error Codes\\n     </button>\\n\\n</div>\\n<hr class=\\\"dbline\\\">\\n<div class=\\\"tab-content\\\">\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'machineinfo'\\\">\\n        <div class=\\\"basic-note\\\">\\n            <h3><b>Machine Name: {{ machine.name }}</b></h3>\\n          \\n            <input [(ngModel)]=\\\"newname\\\" placeholder = {{machine.name}} class=\\\"input\\\" name=\\\"newname\\\">\\n          \\n            <p>Machine IP: {{ machine.ip }}</p>\\n          <input [(ngModel)]=\\\"newip\\\" placeholder = {{machine.ip}} class=\\\"input\\\" name=\\\"newip\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'dinames'\\\">\\n        \\n      Names of Digital inputs can be set here\\n\\n    </div>\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'ainames'\\\">\\n        \\n        Names of Analog inputs can be set here\\n  \\n      </div>\\n      <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'counters'\\\">\\n        \\n          Names of counters can be set here\\n    \\n        </div>          \\n \\n        <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'durations'\\\">\\n        \\n            Names of duration measurements can be set here\\n      \\n          </div>          \\n\\n          <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'errorcodes'\\\">\\n        \\n              Names of error codes can be set here\\n        \\n            </div>          \\n     \\n</div>\\n<hr class=\\\"dbline\\\">\\n<span class=\\\"button is-small is-info\\\" (click)='updateMachine(machine?.id)'>\\n    Save changes\\n  </span>\\n<span class=\\\"button is-small is-info\\\" (click)='toggleEnabled(machine?.enabled)'>\\nEnabled: {{machine.enabled}}\\n</span>\\n<span class=\\\"button is-small is-danger\\\" (click)='deleteMachine(machine?.id)'>Delete</span>\\n<hr class=\\\"dbline\\\">\\n<hr class=\\\"dbline\\\">\\n\\n\"","module.exports = \"hr.dbline {\\n  border-top: 3px double #8c8b8b; }\\n\"","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MachinesService } from '../machines.service';\n\n\n@Component({\n  selector: 'machine-details',\n  templateUrl: './machine-details.component.html',\n  styleUrls: ['./machine-details.component.scss']\n})\n\nexport class MachineDetailsComponent{\n\n  @Input() machine: any;\n\n  tabId: string = 'machineinfo';\n\n  newname: string;\n  newip: string;\n\n  constructor(private machinesService: MachinesService) { }\n\n  updateMachine(id: string) {\n    if (this.machine.id) {\n      this.machinesService.updateMachine(id, {\n         //machinedata\n         name: this.newname || this.machine.name,\n         ip: this.newip || this.machine.ip,\n         enabled: this.machine.enabled\n\n        });\n    } else {\n      console.error('Machine missing ID!');\n    }\n  }\n\n  toggleEnabled(val: boolean) {\n    if (this.machine.id) {\n      this.machinesService.updateMachine(this.machine.id, { enabled: !this.machine.enabled });\n    } else {\n      console.error('User missing ID!');\n    }\n  }\n\n  deleteMachine(id: string) {\n    this.machinesService.deleteMachine(id);\n  }\n\n  showTab (tabId) {\n    this.tabId = tabId;\n }\n\n}\n","module.exports = \"<div class=\\\"box\\\" >\\n    <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\n            <!-- template will replace this div -->\\n    </div>\\n  </div>\\n  \\n  <!-- User NOT logged in -->\\n  <ng-template #guest class=\\\"box\\\">\\n    <h3>GUEST</h3>\\n    <p class=\\\"card-text\\\">You must be registered, logged in and admin to manage machines</p>\\n    <button class=\\\"button\\\" routerLink=\\\"/login\\\">Login/Register</button>\\n  </ng-template>\\n  \\n  <!-- User logged in -->\\n  <ng-template #authenticated>\\n    <div *ngIf=\\\"auth.user | async as user\\\">\\n      <div *ngIf=\\\"user.isAdmin;else noadmin\\\">\\n          <hr>\\n          <p>Add new machine or edit machines below: </p>\\n          <input [(ngModel)]=\\\"name\\\" placeholder=\\\"Machine name\\\" class=\\\"input\\\" name=\\\"machinename\\\">\\n          <input [(ngModel)]=\\\"ip\\\" placeholder=\\\"Machine ip address\\\" class=\\\"input\\\" name=\\\"machineip\\\">\\n          \\n          <button class=\\\"button is-success\\\" (click)=\\\"clickHandler()\\\" [disabled]=\\\"name?.length < 2 || name?.length > 200 || ip?.length < 7 || ip?.length > 15\\\">\\n            Add Machine\\n          </button>\\n          <hr>\\n          \\n        <div *ngFor=\\\"let machine of machines | async\\\">\\n              <machine-details [machine]=\\\"machine\\\"></machine-details>\\n          </div>\\n      </div>\\n     </div>\\n  </ng-template>\\n\\n    <ng-template #noadmin class=\\\"box\\\">\\n        <h3></h3>\\n        <p class=\\\"card-text\\\">You must be admin to manage machines.</p>\\n        <p class=\\\"card-text\\\">Contact your administrator to get admin status.</p>\\n    </ng-template>\\n    \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MachinesService } from '../machines.service';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'machines-list',\n  templateUrl: './machines-list.component.html',\n  styleUrls: ['./machines-list.component.scss']\n})\nexport class MachinesListComponent implements OnInit {\n\n  machines: Observable<any[]>;\n  name: string;\n  ip: string;\n  enabled: boolean=true;\n\n  constructor(private machinesService: MachinesService, public auth: AuthService) { }\n\n\n  ngOnInit() {\n    this.machines = this.machinesService.getData();\n  }\n\n  clickHandler() {\n    this.machinesService.createMachine(this.name, this.ip, this.enabled);\n    this.name = '';\n    this.ip = '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MachineDetailsComponent } from './machine-details/machine-details.component';\nimport { MachinesListComponent } from './machines-list/machines-list.component';\nimport { MachinesService } from './machines.service';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule\n  ],\n  declarations: [MachineDetailsComponent, MachinesListComponent],\n  providers: [MachinesService]\n})\nexport class MachinesModule { }\n","import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\n\nexport class MachinesService {\n\n  machinesCollection: AngularFirestoreCollection<any>;\n  machineDocument:   AngularFirestoreDocument<any>;\n\n  constructor(private afs: AngularFirestore) {\n\n    this.machinesCollection = this.afs.collection('machines', (ref) => ref.orderBy('name', 'desc'));\n   }\n\n   getData(): Observable<any[]> {\n    // ['added', 'modified', 'removed']\n    return this.machinesCollection.snapshotChanges().pipe(\n      map((actions) => {\n        return actions.map((a) => {\n          const data = a.payload.doc.data();\n          return { id: a.payload.doc.id, ...data };\n        });\n      })\n    );\n  }\n\n\n  getMachine(id: string) {\n    return this.afs.doc<any>(`machines/${id}`);\n  }\n\n  createMachine(name: string, ip:string, enabled: boolean) {\n    const machine = {\n      name,\n      ip,\n      enabled,\n    };\n    return this.machinesCollection.add(machine);\n  }\n\n  updateMachine(id: string, data: any) {\n    return this.getMachine(id).update(data);\n  }\n\n  deleteMachine(id: string) {\n    return this.getMachine(id).delete();\n  }\n\n}\n","module.exports = \"\\n<hr class=\\\"dbline\\\">\\n\\n<div class=\\\"tab-buttons\\\">\\n    <button class=\\\"button\\\" (click)=\\\"showTab('main')\\\">\\n        Main\\n    </button>\\n\\n    <button class=\\\"button\\\" (click)=\\\"showTab('data')\\\">\\n       Data\\n    </button>\\n\\n    <button class=\\\"button\\\" (click)=\\\"showTab('events')\\\">\\n        Events\\n     </button>\\n\\n     <button class=\\\"button\\\" (click)=\\\"showTab('errorcodes')\\\">\\n        Errors\\n     </button>\\n</div>\\n<hr>\\n<div class=\\\"tab-content\\\">\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'main'\\\">\\n        <div class=\\\"basic-note\\\">\\n            <h3><b>Machine Name: {{ machine.name }}</b></h3>\\n                 \\n            <p>Machine IP: {{ machine.ip }}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'data'\\\">\\n        \\n      Data here\\n\\n    </div>\\n    <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'events'\\\">\\n        \\n        Events here\\n  \\n      </div>\\n   \\n          <div class=\\\"tab\\\" *ngIf=\\\"tabId === 'errorcodes'\\\">\\n        \\n              Error codes here\\n        \\n            </div>          \\n     \\n</div>\\n<hr class=\\\"dbline\\\">\"","module.exports = \"hr.dbline {\\n  border-top: 3px double #8c8b8b; }\\n\"","import { Component, Input } from '@angular/core';\nimport { MachinesService } from '../../machines/machines.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'monitoring-detail',\n  templateUrl: './monitoring-detail.component.html',\n  styleUrls: ['./monitoring-detail.component.scss']\n})\nexport class MonitoringDetailComponent {\n\n  @Input() machine: any;\n\n  tabId: string = 'main';\n  monitoredMachine: Observable<any>;\n\n  constructor(private machinesService: MachinesService) { \n\n    \n    //this.monitoredMachine = this.machinesService.getByMachineRef(this.machine.id);\n\n\n  }\n\n  showTab (tabId) {\n    this.tabId = tabId;\n }\n\n}\n","module.exports = \"\\n\\n        <div class=\\\"btn-group btn-group-toggle\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"selectedmachine\\\">\\n\\n                <div *ngFor=\\\"let mach of machines | async\\\">\\n                                <label ngbButtonLabel class=\\\"btn-primary\\\">\\n                                <input ngbButton type=\\\"radio\\\" [value] = mach> {{mach.name}}\\n                                </label>\\n                        <!--                      \\n                        <button (click)=\\\"showMachine(mach)\\\">\\n                                {{mach.name}}\\n                            </button>\\n                        -->\\n        \\n                </div>\\n        \\n        </div>\\n\\n\\n                <monitoring-detail [machine]=\\\"selectedmachine\\\"></monitoring-detail>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MachinesService } from '../../machines/machines.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'monitoring-list',\n  templateUrl: './monitoring-list.component.html',\n  styleUrls: ['./monitoring-list.component.scss']\n})\nexport class MonitoringListComponent implements OnInit {\n\n  machines: Observable<any[]>;\n  selectedmachine: any = \"\";\n\n  constructor(private machinesService: MachinesService) { \n    \n  }\n\n  ngOnInit() {\n    this.machines = this.machinesService.getData();  \n  }\n\n  showMachine(machi:any){\n    this.selectedmachine=machi;\n    //console.log(machi.id);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MonitoringListComponent } from './monitoring-list/monitoring-list.component';\nimport { MonitoringDetailComponent } from './monitoring-detail/monitoring-detail.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [MonitoringListComponent, MonitoringDetailComponent]\n})\nexport class MonitoringModule { }\n","module.exports = \"<div class=\\\"basic-note\\\">\\r\\n    <h3>{{ note.content }}</h3>\\r\\n    <span class=\\\"button is-small is-info\\\" (click)='addHeartToNote(note.hearts)'>\\r\\n    Like <i class=\\\"fa fa-heart\\\" style=\\\"margin-left: 5px;\\\"></i>\\r\\n  </span>\\r\\n    <span class=\\\"button is-small is-danger\\\" (click)='deleteNote(note?.id)'>Delete</span>\\r\\n    <p>Liked: {{ note.hearts || 0 }} times.</p>\\r\\n</div>\"","module.exports = \".basic-note {\\n  visibility: visible; }\\n\"","import { Component, Input } from '@angular/core';\r\n\r\nimport { NotesService } from '../notes.service';\r\n\r\n@Component({\r\n  selector: 'note-detail',\r\n  templateUrl: './note-detail.component.html',\r\n  styleUrls: ['./note-detail.component.scss'],\r\n})\r\nexport class NoteDetailComponent {\r\n\r\n  @Input() note: any;\r\n\r\n  constructor(private notesService: NotesService) { }\r\n\r\n  addHeartToNote(val: number) {\r\n    if (this.note.id) {\r\n      this.notesService.updateNote(this.note.id, { hearts: val + 1 });\r\n    } else {\r\n      console.error('Note missing ID!');\r\n    }\r\n  }\r\n\r\n  deleteNote(id: string) {\r\n    this.notesService.deleteNote(id);\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1>TOTECH Comments</h1>\\r\\n<p>\\r\\n    Leave a comment or like a comment below:\\r\\n</p>\\r\\n<hr>\\r\\n\\r\\n<input [(ngModel)]=\\\"content\\\" placeholder=\\\"Add your own comment\\\" class=\\\"input\\\" name=\\\"note\\\">\\r\\n\\r\\n\\r\\n<button class=\\\"button is-success\\\" (click)=\\\"clickHandler()\\\" [disabled]=\\\"content?.length < 2 || content?.length > 200\\\">\\r\\n  Add Comment\\r\\n</button>\\r\\n<hr>\\r\\n<div *ngFor=\\\"let note of notes | async\\\">\\r\\n    <note-detail [note]=\\\"note\\\"></note-detail>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { NotesService } from '../notes.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'notes-list',\r\n  templateUrl: './notes-list.component.html',\r\n  styleUrls: ['./notes-list.component.scss']\r\n})\r\nexport class NotesListComponent implements OnInit {\r\n\r\n  notes: Observable<any[]>;\r\n  content: string;\r\n\r\n  constructor(private notesService: NotesService) { }\r\n\r\n  ngOnInit() {\r\n    this.notes = this.notesService.getData();\r\n  }\r\n\r\n  clickHandler() {\r\n    this.notesService.createNote(this.content);\r\n    this.content = '';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NotesListComponent } from './notes-list/notes-list.component';\r\nimport { NoteDetailComponent } from './note-detail/note-detail.component';\r\nimport { NotesService } from './notes.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [NotesListComponent, NoteDetailComponent],\r\n  providers: [NotesService]\r\n})\r\nexport class NotesModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NotesService {\r\n\r\n  notesCollection: AngularFirestoreCollection<any>;\r\n  noteDocument:   AngularFirestoreDocument<any>;\r\n\r\n  constructor(private afs: AngularFirestore) {\r\n    this.notesCollection = this.afs.collection('notes', (ref) => ref.orderBy('time', 'desc').limit(5));\r\n  }\r\n\r\n  getData(): Observable<any[]> {\r\n    // ['added', 'modified', 'removed']\r\n    return this.notesCollection.snapshotChanges().pipe(\r\n      map((actions) => {\r\n        return actions.map((a) => {\r\n          const data = a.payload.doc.data();\r\n          return { id: a.payload.doc.id, ...data };\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getNote(id: string) {\r\n    return this.afs.doc<any>(`notes/${id}`);\r\n  }\r\n\r\n  createNote(content: string) {\r\n    const note = {\r\n      content,\r\n      hearts: 0,\r\n      time: new Date().getTime(),\r\n    };\r\n    return this.notesCollection.add(note);\r\n  }\r\n\r\n  updateNote(id: string, data: any) {\r\n    return this.getNote(id).update(data);\r\n  }\r\n\r\n  deleteNote(id: string) {\r\n    return this.getNote(id).delete();\r\n  }\r\n}\r\n","module.exports = \"<ngb-carousel *ngIf=\\\"images\\\">\\r\\n    <ng-template ngbSlide>\\r\\n      <img [src]=\\\"images[0]\\\" alt=\\\"slide\\\">\\r\\n      <div class=\\\"carousel-caption\\\">\\r\\n        <!-- <h3>First slide label</h3>-->\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template ngbSlide>\\r\\n      <img [src]=\\\"images[1]\\\" alt=\\\"slide\\\">\\r\\n      <div class=\\\"carousel-caption\\\">\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template ngbSlide>\\r\\n        <img [src]=\\\"images[2]\\\" alt=\\\"slide\\\">\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n        </div>\\r\\n      </ng-template>\\r\\n      <ng-template ngbSlide>\\r\\n          <img [src]=\\\"images[3]\\\" alt=\\\"slide\\\">\\r\\n          <div class=\\\"carousel-caption\\\">\\r\\n          </div>\\r\\n        </ng-template>\\r\\n        <ng-template ngbSlide>\\r\\n            <img [src]=\\\"images[4]\\\" alt=\\\"slide\\\">\\r\\n            <div class=\\\"carousel-caption\\\">\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template ngbSlide>\\r\\n              <img [src]=\\\"images[5]\\\" alt=\\\"slide\\\">\\r\\n              <div class=\\\"carousel-caption\\\">\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <ng-template ngbSlide>\\r\\n                <img [src]=\\\"images[6]\\\" alt=\\\"slide\\\">\\r\\n                <div class=\\\"carousel-caption\\\">\\r\\n                </div>\\r\\n              </ng-template>\\r\\n              <ng-template ngbSlide>\\r\\n                  <img [src]=\\\"images[7]\\\" alt=\\\"slide\\\">\\r\\n                  <div class=\\\"carousel-caption\\\">\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n                <ng-template ngbSlide>\\r\\n                    <img [src]=\\\"images[8]\\\" alt=\\\"slide\\\">\\r\\n                    <div class=\\\"carousel-caption\\\">\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                  <ng-template ngbSlide>\\r\\n                      <img [src]=\\\"images[9]\\\" alt=\\\"slide\\\">\\r\\n                      <div class=\\\"carousel-caption\\\">\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                    <ng-template ngbSlide>\\r\\n                        <img [src]=\\\"images[10]\\\" alt=\\\"slide\\\">\\r\\n                        <div class=\\\"carousel-caption\\\">\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                      <ng-template ngbSlide>\\r\\n                          <img [src]=\\\"images[11]\\\" alt=\\\"slide\\\">\\r\\n                          <div class=\\\"carousel-caption\\\">\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n                            </ngb-carousel>\"","module.exports = \"\"","import { Component, OnInit, NgModule } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'en',\n  templateUrl: './en.component.html',\n  styleUrls: ['./en.component.scss']\n})\n\n\nexport class EnComponent implements OnInit {\n\n  images: Array<string>=[\n    \"./assets/en/Slide1.PNG\",\n    \"./assets/en/Slide2.PNG\",\n    \"./assets/en/Slide3.PNG\",\n    \"./assets/en/Slide4.PNG\",\n    \"./assets/en/Slide5.PNG\",\n    \"./assets/en/Slide6.PNG\",\n    \"./assets/en/Slide7.PNG\",\n    \"./assets/en/Slide8.PNG\",\n    \"./assets/en/Slide9.PNG\",\n    \"./assets/en/Slide10.PNG\",\n    \"./assets/en/Slide11.PNG\",\n    \"./assets/en/Slide12.PNG\"\n  ];\n\n  constructor() {\n \n   }\n\n  ngOnInit() {\n   \n  }\n\n \n \n}\n","module.exports = \"<ngb-carousel *ngIf=\\\"images\\\">\\n    <ng-template ngbSlide>\\n      <img [src]=\\\"images[0]\\\" alt=\\\"Random first slide\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3>First slide label</h3>\\n        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\n      </div>\\n    </ng-template>\\n    <ng-template ngbSlide>\\n      <img [src]=\\\"images[1]\\\" alt=\\\"Random second slide\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3>Second slide label</h3>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\n      </div>\\n    </ng-template>\\n  </ngb-carousel>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fi',\n  templateUrl: './fi.component.html',\n  styleUrls: ['./fi.component.scss']\n})\nexport class FiComponent implements OnInit {\n\n  images: Array<string>=[\n    \"./assets/totech_logo.jpg\",\n    \"./assets/totech_logo_inverse.jpg\"\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EnComponent } from './en/en.component';\nimport { FiComponent } from './fi/fi.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule, NgbModule\n  ],\n  declarations: [EnComponent, FiComponent]\n})\nexport class PresentationModule { }\n","module.exports = \"<div class=\\\"centered-wrapper\\\">\\n    <div class=\\\"centered-content>\\\">    \\n    <a routerLink=\\\"/\\\" align=\\\"center\\\">\\n    <img src=\\\"assets/totech_logo.jpg\\\" alt=\\\"TOTECH\\\" />\\n</a>\\n<hr>\\n<p>\\n  TOTECH is a new company providing professional help with automation projects and also other consulting or services in the area of Industrial Automation, Industry 4.0 and IoT.\\n  Our speciality is connecting the automation ( machines, processes or whole factory ) to the IT side of the customers organization or we can connect it to our cloud and custom \\n  made webapplications to provide the full realtime monitoring system for our customers.\\n</p>\\n<p>\\n  We have our own, well tested, stable solution to get correct data reliably and automatically \\n  ( with no need for operators interactions ) from PLC's to PC ( LAN TCP/IP ) and further up to databases \\n  or cloud and finally to the end user applications. In the end user application the monitored realtime data from the machines, \\n  processes or whole factory can be combined with other data ( business side orders, product inventory etc. ) to\\n  make powerfull solutions that fully assists our customers in whatever industry they operate.\\n</p>\\n<hr>\\n<div>\\n    <h3>If you have an automation project or you are otherwise interested in our solutions, </h3>\\n    <h3>Do not hesitate to contact us </h3>\\n    <h3>or register for a user account so we can contact you.</h3>\\n  \\n  </div>\\n  \\n</div>\\n</div>\"","module.exports = \".centered-wrapper {\\n  position: relative;\\n  text-align: center; }\\n\\n.centered-wrapper:before {\\n  content: \\\"\\\";\\n  position: relative;\\n  display: inline-block;\\n  width: 0;\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.centered-content {\\n  display: inline-block;\\n  vertical-align: middle; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"centered-wrapper\\\">\\n    <div class=\\\"centered-content>\\\">    \\n    <a routerLink=\\\"/\\\" align=\\\"center\\\">\\n    <img src=\\\"assets/totech_logo.jpg\\\" alt=\\\"TOTECH\\\" />\\n</a>\\n<h1>www.totech.fi</h1>\\n\\n<p>Email: <a href=\\\"mailto:toni.pitkakangas@totech.fi?Subject=Hello%20TOTECH\\\" target=\\\"_top\\\">toni.pitkakangas@totech.fi</a></p>\\n<p>Phone: +358 407356596</p>\\n\\n<hr>\\n<h3>Register for a user account to get more information.</h3>\\n</div>\\n</div>\"","module.exports = \".centered-wrapper {\\n  position: relative;\\n  text-align: center; }\\n\\n.centered-wrapper:before {\\n  content: \\\"\\\";\\n  position: relative;\\n  display: inline-block;\\n  width: 0;\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.centered-content {\\n  display: inline-block;\\n  vertical-align: middle; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'contact-page',\n  templateUrl: './contact-page.component.html',\n  styleUrls: ['./contact-page.component.scss']\n})\nexport class ContactPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n         \\r\\n<div class=\\\"centered-wrapper\\\">\\r\\n    <div class=\\\"centered-content>\\\">    \\r\\n    <a routerLink=\\\"/\\\" align=\\\"center\\\">\\r\\n    <img src=\\\"assets/totech_logo.jpg\\\" alt=\\\"TOTECH\\\" />\\r\\n</a>\\r\\n<h1>Web Application</h1>\\r\\n\\r\\n<p>Coming soon...</p>\\r\\n\\r\\n<p>Email: <a href=\\\"mailto:toni.pitkakangas@totech.fi?Subject=Hello%20TOTECH\\\" target=\\\"_top\\\">toni.pitkakangas@totech.fi</a></p>\\r\\n<p>Phone: +358 407356596</p>\\r\\n</div>\\r\\n</div>\\r\\n      \"","module.exports = \".centered-wrapper {\\n  position: relative;\\n  text-align: center; }\\n\\n.centered-wrapper:before {\\n  content: \\\"\\\";\\n  position: relative;\\n  display: inline-block;\\n  width: 0;\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.centered-content {\\n  display: inline-block;\\n  vertical-align: middle; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"spinner\\\">\\r\\n  <div class=\\\"rect1\\\"></div>\\r\\n  <div class=\\\"rect2\\\"></div>\\r\\n  <div class=\\\"rect3\\\"></div>\\r\\n  <div class=\\\"rect4\\\"></div>\\r\\n  <div class=\\\"rect5\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \".spinner {\\n  margin: 100px auto;\\n  width: 50px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 10px; }\\n\\n.spinner > div {\\n  background-color: #333;\\n  height: 100%;\\n  width: 6px;\\n  display: inline-block;\\n  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\\n  animation: sk-stretchdelay 1.2s infinite ease-in-out; }\\n\\n.spinner .rect2 {\\n  -webkit-animation-delay: -1.1s;\\n  animation-delay: -1.1s; }\\n\\n.spinner .rect3 {\\n  -webkit-animation-delay: -1.0s;\\n  animation-delay: -1.0s; }\\n\\n.spinner .rect4 {\\n  -webkit-animation-delay: -0.9s;\\n  animation-delay: -0.9s; }\\n\\n.spinner .rect5 {\\n  -webkit-animation-delay: -0.8s;\\n  animation-delay: -0.8s; }\\n\\n@-webkit-keyframes sk-stretchdelay {\\n  0%, 40%, 100% {\\n    -webkit-transform: scaleY(0.4); }\\n  20% {\\n    -webkit-transform: scaleY(1); } }\\n\\n@keyframes sk-stretchdelay {\\n  0%, 40%, 100% {\\n    transform: scaleY(0.4);\\n    -webkit-transform: scaleY(0.4); }\\n  20% {\\n    transform: scaleY(1);\\n    -webkit-transform: scaleY(1); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.scss']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"columns\\\">\\n    <aside class=\\\"column is-3\\\">\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://www.engelglobal.com/en/fi/contact/local-contacts/countryContact/finland.html\\\"> <img src=\\\"assets/logos/ENGEL_Logo_png.png\\\" alt=\\\"ENGEL\\\" /></a>\\n    </aside>\\n\\n    <main class=\\\"column is-4\\\">\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://industrial.omron.fi/fi/home\\\"> <img src=\\\"assets/logos/OMRON_Logo_png.png\\\" alt=\\\"OMRON\\\" /></a>\\n       \\n    </main>\\n    <aside class=\\\"column is-3\\\">\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://www.bedika.fi/\\\"> <img src=\\\"assets/logos/BEDIKA_Logo_png.png\\\" alt=\\\"BEDIKA\\\" /></a>\\n        </aside>\\n</div>\\n<hr>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'logos',\n  templateUrl: './logos.component.html',\n  styleUrls: ['./logos.component.scss']\n})\nexport class LogosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\r\\n    <div class=\\\"navbar-brand\\\">\\r\\n        <a routerLink=\\\"/\\\">\\r\\n            <img src=\\\"assets/totech_logo_inverse.jpg\\\" width = \\\"20%\\\" height=\\\"20%\\\"alt=\\\"TOTECH\\\" />\\r\\n        </a>\\r\\n\\r\\n        <a id=\\\"navToggle\\\" role=\\\"button\\\" class=\\\"navbar-burger\\\" (click)=\\\"toggleCollapse()\\\" [ngClass]=\\\"{'is-active': show}\\\">\\r\\n            <span aria-hidden=\\\"true\\\"></span>\\r\\n            <span aria-hidden=\\\"true\\\"></span>\\r\\n            <span aria-hidden=\\\"true\\\"></span>\\r\\n        </a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"navbar-menu\\\" [ngClass]=\\\"{'is-active': show}\\\">\\r\\n   \\r\\n            <div class=\\\"navbar-end\\\">\\r\\n            <a style=\\\"color:orangered\\\" routerLink=\\\"/contact\\\">\\r\\n        Contact\\r\\n      </a>\\r\\n      <span>&nbsp;&nbsp;</span>\\r\\n            <a style=\\\"color:orangered\\\" routerLink=\\\"/about\\\">\\r\\n        About\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","module.exports = \".navbar {\\n  background-color: black;\\n  border-color: orangered; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.scss']\r\n})\r\nexport class MainNavComponent {\r\n\r\n  show = false;\r\n\r\n  constructor() { }\r\n\r\n  toggleCollapse() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"notify.msg | async as msg\\\" class=\\\"notification\\\"\\r\\n  [ngClass]=\\\"{ \\r\\n    'is-danger': msg.style == 'error',\\r\\n    'is-success': msg.style == 'success',\\r\\n    'is-info': msg.style == 'info'\\r\\n  }\\\">\\r\\n  <button class=\\\"delete\\\" (click)=\\\"notify.clear()\\\"></button>\\r\\n  {{ msg.content }}\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { NotifyService } from '../../core/notify.service';\r\n\r\n@Component({\r\n  selector: 'notification-message',\r\n  templateUrl: './notification-message.component.html',\r\n  styleUrls: ['./notification-message.component.scss']\r\n})\r\nexport class NotificationMessageComponent {\r\n\r\n  constructor(public notify: NotifyService) { }\r\n}\r\n","module.exports = \"<h1>Angular Universal Server Rendered Page</h1>\\r\\n\\r\\n<p>\\r\\n  This page is prerendered with Angular Universal and is 100% search engine and linkbot friedly - and highly performant. Give this URL a whirl in the\\r\\n  <a href=\\\"https://cards-dev.twitter.com/validator\\\">twitter-card validator</a>\\r\\n</p>\\r\\n\\r\\n<p>Learn all about <a href=\\\"https://angularfirebase.com/tag/ssr/\\\">server-side rendering strategies in Angular</a></p>\\r\\n\\r\\n<h2>Dynamic Firebase Data</h2>\\r\\n\\r\\n<p>Need SSR with dynamic Firebase data? No problem. Here are some animals I retrieved from Cloud Firestore.</p>\\r\\n\\r\\n<div *ngFor=\\\"let animal of animals\\\" class=\\\"box\\\">\\r\\n  <article class=\\\"media\\\">\\r\\n    <div class=\\\"media-left\\\">\\r\\n      <figure class=\\\"image is-128x128\\\">\\r\\n        <img [src]=\\\"animal.imgURL\\\" alt=\\\"{{ animal.bio }}\\\">\\r\\n      </figure>\\r\\n    </div>\\r\\n    <div class=\\\"media-content\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n        <p>\\r\\n          <strong>{{ animal.name }}</strong>\\r\\n          <br> {{ animal.bio }}\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </article>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\n\r\nimport { tap, startWith } from 'rxjs/operators';\r\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\r\n\r\nconst DATA = makeStateKey<any>('animals');\r\n\r\n@Component({\r\n  selector: 'ssr-page',\r\n  templateUrl: './ssr-page.component.html',\r\n  styleUrls: ['./ssr-page.component.scss']\r\n})\r\nexport class SsrPageComponent implements OnInit {\r\n\r\n  animals;\r\n\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n    private meta: Meta,\r\n    private titleService: Title,\r\n    private state: TransferState\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n   // set metatags for twitter\r\n   this.setMetaTags();\r\n\r\n    // Get the animals from the database\r\n    const animals$ = this.afs.collection('animals').valueChanges();\r\n\r\n    // If state is available, start with it your observable\r\n    const exists = this.state.get(DATA, [] as any);\r\n    if (!exists.length) {\r\n      animals$.pipe(\r\n        tap(list => {\r\n          this.state.set(DATA, list);\r\n          this.animals = list;\r\n        })\r\n      )\r\n      .subscribe();\r\n    } else {\r\n      this.animals = exists;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  setMetaTags() {\r\n    this.titleService.setTitle('Angular Firebase Animals');\r\n\r\n    // Set meta tags\r\n    this.meta.updateTag({ name: 'twitter:card', content: 'summary' });\r\n    this.meta.updateTag({ name: 'twitter:site', content: '@angularfirebase' });\r\n    this.meta.updateTag({ name: 'twitter:title', content: 'Angular Firebase Animals' });\r\n    this.meta.updateTag({ name: 'twitter:description', content: 'A server-rendered list of animals from Cloud Firestore in Angular' });\r\n    this.meta.updateTag({ name: 'twitter:image', content: 'https://goo.gl/MzskMe'});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\r\nimport { NotificationMessageComponent } from './notification-message/notification-message.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { SsrPageComponent } from './ssr-page/ssr-page.component';\r\nimport { LogosComponent } from './logos/logos.component';\nimport { AboutPageComponent } from './about-page/about-page.component';\nimport { ContactPageComponent } from './contact-page/contact-page.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NgbModule, RouterModule, ReactiveFormsModule],\r\n  declarations: [\r\n    UserLoginComponent,\r\n    HomePageComponent,\r\n    MainNavComponent,\r\n    LoadingSpinnerComponent,\r\n    NotificationMessageComponent,\r\n    UserProfileComponent,\r\n    UserFormComponent,\r\n    SsrPageComponent,\r\n    LogosComponent,\r\n    AboutPageComponent,\r\n    ContactPageComponent\r\n  ],\r\n  exports: [\r\n    MainNavComponent,\r\n    LoadingSpinnerComponent,\r\n    NotificationMessageComponent,\r\n    UserProfileComponent,\r\n    UserFormComponent,\r\n    LogosComponent\r\n  ]\r\n})\r\nexport class UiModule {}\r\n","module.exports = \"<form [formGroup]=\\\"userForm\\\" *ngIf=\\\"newUser\\\" (ngSubmit)=\\\"signup()\\\">\\r\\n\\r\\n    <h3>Or signup with any email address below</h3>\\r\\n    <p class=\\\"button is-small\\\" (click)=\\\"toggleForm()\\\">Already have account. Login here!</p>\\r\\n    <hr>\\r\\n\\r\\n    <label for=\\\"name\\\">Name</label>\\r\\n    <input type=\\\"name\\\" class=\\\"input\\\" formControlName=\\\"name\\\" name=\\\"name\\\" required>\\r\\n\\r\\n    <label for=\\\"company\\\">Company</label>\\r\\n    <input type=\\\"company\\\" class=\\\"input\\\" formControlName=\\\"company\\\" name=\\\"company\\\">\\r\\n\\r\\n    <label for=\\\"phone\\\">Phone number</label>\\r\\n    <input type=\\\"phone\\\" class=\\\"input\\\" formControlName=\\\"phone\\\" name=\\\"phone\\\">\\r\\n\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"email\\\" class=\\\"input\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required autocomplete=\\\"new-password\\\">\\r\\n\\r\\n    <div *ngIf=\\\"formErrors.email\\\" class=\\\"notification is-danger\\\">\\r\\n        {{ formErrors.email }}\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"input\\\" formControlName=\\\"password\\\" name=\\\"password\\\" required>\\r\\n\\r\\n    <div *ngIf=\\\"formErrors.password\\\" class=\\\"notification is-danger\\\">\\r\\n        {{ formErrors.password }}\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"userForm.valid\\\" class=\\\"notification is-success\\\">\\r\\n        <p>\\r\\n                By registering you will get access to more options and information\\r\\n                on the website and TOTECH will borrow and store a copy of your \\r\\n                provided contact details.\\r\\n        </p>\\r\\n        <p>\\r\\n                TOTECH will store the following information:\\r\\n        </p>\\r\\n        <p>\\r\\n                The users name, email, company name and phone number.\\r\\n                Purpose is to have contact details of our registered users.\\r\\n        </p>\\r\\n        <p>\\r\\n                In addition to this TOTECH will also store a Userlevel indication ( Admin ).\\r\\n                Purpose is to give some users (usually internal users or partners) even more options\\r\\n                and information available to them on the TOTECH website.\\r\\n        </p>\\r\\n        <p>\\r\\n                You can at any time ask us to show and/or delete the stored information about you.\\r\\n            </p>\\r\\n            <p><b>\\r\\n                By clicking submit you indicate that you have read and agreed to all of the above \\r\\n            </b>\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"button btn-social btn-google\\\" [disabled]=\\\"!userForm.valid\\\">Submit</button>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"userForm\\\" *ngIf=\\\"!newUser\\\" (ngSubmit)=\\\"login()\\\">\\r\\n\\r\\n    <h3>Existing User Login with email and password below</h3>\\r\\n    <p class=\\\"btn button is-small\\\" (click)=\\\"toggleForm()\\\">New User? Back to signup</p>\\r\\n    <hr>\\r\\n\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email2\\\" class=\\\"input\\\" formControlName=\\\"email\\\" required autocomplete=\\\"new-password\\\">\\r\\n\\r\\n    <div *ngIf=\\\"formErrors.email\\\" class=\\\"help is-danger\\\">\\r\\n        {{ formErrors.email }}\\r\\n    </div>\\r\\n\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password2\\\" class=\\\"input\\\" formControlName=\\\"password\\\" required autocomplete=\\\"new-password\\\">\\r\\n\\r\\n    <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\r\\n        {{ formErrors.password }}\\r\\n    </div>\\r\\n\\r\\n<!--    <button type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!userForm.valid\\\">Submit</button>-->\\r\\n    <button type=\\\"submit\\\" class=\\\"button btn-social btn-google\\\">Submit</button>\\r\\n\\r\\n <!--   <span *ngIf=\\\"userForm.valid\\\" class=\\\"help is-success\\\">Form Looks Valid</span>-->\\r\\n\\r\\n    <a *ngIf=\\\"!passReset && userForm.controls.email.valid\\\" class=\\\"help is-info\\\" (click)=\\\"resetPassword()\\\">Reset Password for {{userForm.value.email}}?</a>\\r\\n    <p *ngIf=\\\"passReset\\\" class=\\\"help is-info\\\">Reset requested. Check your email instructions.</p>\\r\\n\\r\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\ntype UserFields = 'email' | 'password';\r\ntype FormErrors = { [u in UserFields]: string };\r\n\r\n@Component({\r\n  selector: 'user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.scss'],\r\n})\r\nexport class UserFormComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  newUser = true; // to toggle login or signup form\r\n  passReset = false; // set to true when password reset is triggered\r\n  formErrors: FormErrors = {\r\n    'email': '',\r\n    'password': '',\r\n  };\r\n  validationMessages = {\r\n    'email': {\r\n      'required': 'Email is required.',\r\n      'email': 'Email must be a valid email',\r\n    },\r\n    'password': {\r\n      'required': 'Password is required.',\r\n      'pattern': 'Password must be include at one letter and one number.',\r\n      'minlength': 'Password must be at least 4 characters long.',\r\n      'maxlength': 'Password cannot be more than 40 characters long.',\r\n    },\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  toggleForm() {\r\n    this.newUser = !this.newUser;\r\n  }\r\n\r\n  signup() {\r\n    this.auth.emailSignUp(\r\n      this.userForm.value['name'],\r\n      this.userForm.value['company'],\r\n      this.userForm.value['phone'],\r\n      this.userForm.value['email'], \r\n      this.userForm.value['password']);\r\n  }\r\n\r\n  login() {\r\n    this.auth.emailLogin(this.userForm.value['email'], this.userForm.value['password']);\r\n  }\r\n\r\n  resetPassword() {\r\n    this.auth.resetPassword(this.userForm.value['email'])\r\n      .then(() => this.passReset = true);\r\n  }\r\n\r\n  buildForm() {\r\n    this.userForm = this.fb.group({\r\n      'name': ['', [\r\n        Validators.minLength(2),\r\n      ]],\r\n      'company': ['', [\r\n      ]],\r\n      'phone': ['', [\r\n        Validators.minLength(7),\r\n      ]],\r\n      'email': ['', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]],\r\n      'password': ['', [\r\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(25),\r\n      ]],\r\n    });\r\n\r\n    this.userForm.valueChanges.subscribe((data) => this.onValueChanged(data));\r\n    this.onValueChanged(); // reset validation messages\r\n  }\r\n\r\n  // Updates validation state on form changes.\r\n  onValueChanged(data?: any) {\r\n    if (!this.userForm) { return; }\r\n    const form = this.userForm;\r\n    for (const field in this.formErrors) {\r\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field) && (field === 'email' || field === 'password')) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          if (control.errors) {\r\n            for (const key in control.errors) {\r\n              if (Object.prototype.hasOwnProperty.call(control.errors, key) ) {\r\n                this.formErrors[field] += `${(messages as {[key: string]: string})[key]} `;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<div *ngIf=\\\"!(auth.user | async); else alreadyLoggedIn\\\">\\r\\n\\r\\n  <h3>You can use your existing Google account to register/login</h3>\\r\\n    <p>\\r\\n        <button class=\\\"button btn-social btn-google\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                <i class=\\\"fa fa-google fa-lg\\\"></i>Use Google Account\\r\\n        </button>\\r\\n      </p>\\r\\n      <div id=\\\"collapseExample\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"notification is-success\\\">\\r\\n                  <p>\\r\\n                          By registering you will get access to more options and information\\r\\n                          on the website and TOTECH will borrow and store a copy of your \\r\\n                          provided contact details.\\r\\n                  </p>\\r\\n                  <p>\\r\\n                          When using your Google account, TOTECH will store the following information\\r\\n                          ( as it is available from yuor Google profile )\\r\\n                  </p>\\r\\n                  <p>\\r\\n                          The users name, email, phone number.\\r\\n                          Purpose is to have contact details of our registered users.\\r\\n                          <b>OBS! When using your Google account your Google profile photo will\\r\\n                          also get stored automatically!</b>\\r\\n                  </p>\\r\\n                  <p>\\r\\n                          In addition to this TOTECH may also add a Userlevel indication ( Admin ).\\r\\n                          Purpose is to give some users (usually internal users or partners) even more options\\r\\n                          and information available to them on the TOTECH website.\\r\\n                  </p>\\r\\n                  <p>\\r\\n                          You can at any time ask us to show and/or delete the stored information about you.\\r\\n                      </p>\\r\\n                      <p><b>\\r\\n                          By clicking connect you indicate that you have read and agreed to all of the above \\r\\n                      </b>\\r\\n                  </p>\\r\\n   \\r\\n                  <button (click)=\\\"signInWithGoogle()\\\" class=\\\"button btn-social btn-google\\\">\\r\\n                      <i class=\\\"fa fa-google fa-lg\\\"></i> Connect Google\\r\\n                    </button>\\r\\n       \\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <user-form></user-form>\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #alreadyLoggedIn>\\r\\n  <p class=\\\"text-success\\\">\\r\\n    You are logged in <i class=\\\"fa fa-thumbs-up\\\"></i>\\r\\n  </p>\\r\\n</ng-template>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\n@Component({\r\n  selector: 'user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.scss'],\r\n})\r\nexport class UserLoginComponent {\r\n\r\n  public isCollapsed = true;\r\n\r\n  constructor(public auth: AuthService,\r\n              private router: Router) { }\r\n\r\n  /// Social Login\r\n\r\n  async signInWithGithub() {\r\n    await this.auth.githubLogin();\r\n    return await this.afterSignIn();\r\n  }\r\n\r\n  async signInWithGoogle() {\r\n    await this.auth.googleLogin();\r\n    return await this.afterSignIn();\r\n  }\r\n\r\n  async signInWithFacebook() {\r\n    await this.auth.facebookLogin();\r\n    await this.afterSignIn();\r\n  }\r\n\r\n  async signInWithTwitter() {\r\n    await this.auth.twitterLogin();\r\n    return await this.afterSignIn();\r\n  }\r\n\r\n  /// Anonymous Sign In\r\n\r\n  async signInAnonymously() {\r\n    await this.auth.anonymousLogin();\r\n    return await this.afterSignIn();\r\n  }\r\n\r\n  /// Shared\r\n\r\n  private afterSignIn() {\r\n    // Do after login stuff here, such router redirects, toast messages, etc.\r\n    return this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"box\\\" >\\r\\n  <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\r\\n          <!-- template will replace this div -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- User NOT logged in -->\\r\\n<ng-template #guest class=\\\"box\\\">\\r\\n  <h3>GUEST</h3>\\r\\n  <p class=\\\"card-text\\\">Login or register to get started...</p>\\r\\n  <button class=\\\"button btn-block\\\" routerLink=\\\"/login\\\">Login/Register</button>\\r\\n</ng-template>\\r\\n\\r\\n<!-- User logged in -->\\r\\n<ng-template #authenticated>\\r\\n  <div *ngIf=\\\"auth.user | async as user\\\">\\r\\n    <img [src]=\\\"user.photoURL || 'assets/totech_icon.jpg'\\\" class=\\\"cntr\\\">\\r\\n    <h3>{{ user.displayName }}</h3>\\r\\n    <h3>{{ user.company }}</h3>\\r\\n    <p class=\\\"text-truncate\\\">{{ user.email }}</p>\\r\\n    <div *ngIf=\\\"user.isAdmin\\\">\\r\\n    \\r\\n        <button class=\\\"btn btn-outline-primary btn-block\\\" (click)=\\\"toggleCollapse()\\\">Admin\\r\\n        <span [hidden]=\\\"show\\\" class=\\\"fa fa-bars fa-lg float-right\\\"></span>\\r\\n        <span [hidden]=\\\"!show\\\" class=\\\"fa fa-times fa-lg float-right\\\"></span>\\r\\n      </button>\\r\\n        <div class=\\\"collapse\\\" [class.show]=\\\"show\\\">\\r\\n          <button class=\\\"button btn-block\\\" routerLink=\\\"/users\\\">Manage Users</button>\\r\\n          <button class=\\\"button btn-block\\\" routerLink=\\\"/machines\\\">Manage machines</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <button class=\\\"button btn-block\\\" routerLink=\\\"/monitoring\\\">Machine Monitoring</button>\\r\\n    <button class=\\\"button btn-block\\\" routerLink=\\\"/presentation/en\\\">Presentation (EN)</button>\\r\\n    <button class=\\\"button btn-block\\\" routerLink=\\\"/presentation/fi\\\">Presentation (FI)</button>\\r\\n    <button class=\\\"button btn-block\\\" routerLink=\\\"/notes\\\">Comment</button>\\r\\n    <button class=\\\"btn btn-outline-primary btn-block\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","module.exports = \".cntr {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 50%; }\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../../core/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss'],\r\n})\r\n\r\n\r\nexport class UserProfileComponent {\r\n\r\n  show:boolean = false;\r\n\r\n  constructor(public auth: AuthService) { }\r\n\r\n  logout() {\r\n    this.auth.signOut();\r\n  }\r\n  \r\n  toggleCollapse() {\r\n    this.show = !this.show\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, HostBinding, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[dropZone]'\r\n})\r\nexport class DropZoneDirective {\r\n\r\n  @Output() dropped =  new EventEmitter<FileList>();\r\n  @Output() hovered =  new EventEmitter<boolean>();\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop($event) {\r\n    $event.preventDefault();\r\n    this.dropped.emit($event.dataTransfer.files);\r\n    this.hovered.emit(false);\r\n  }\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  onDragOver($event) {\r\n    $event.preventDefault();\r\n    this.hovered.emit(true);\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  onDragLeave($event) {\r\n    $event.preventDefault();\r\n    this.hovered.emit(false);\r\n  }\r\n\r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nconst FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\nconst FILE_SIZE_UNITS_LONG = ['Bytes', 'Kilobytes', 'Megabytes', 'Gigabytes', 'Pettabytes', 'Exabytes', 'Zettabytes', 'Yottabytes'];\r\n\r\n\r\n@Pipe({\r\n  name: 'fileSize'\r\n})\r\nexport class FileSizePipe implements PipeTransform {\r\n\r\n  transform(sizeInBytes: number, longForm: boolean): string {\r\n    const units = longForm\r\n      ? FILE_SIZE_UNITS_LONG\r\n      : FILE_SIZE_UNITS;\r\n\r\n    let power = Math.round(Math.log(sizeInBytes) / Math.log(1024));\r\n    power = Math.min(power, units.length - 1);\r\n\r\n    const size = sizeInBytes / Math.pow(1024, power); // size in new units\r\n    const formattedSize = Math.round(size * 100) / 100; // keep up to 2 decimals\r\n    const unit = units[power];\r\n\r\n    return size ? `${formattedSize} ${unit}` : '0';\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1>Firebase Storage Demo</h1>\\r\\n\\r\\n<p>\\r\\n  Learn how to build an\\r\\n  <a href=\\\"https://angularfirebase.com/lessons/firebase-storage-with-angularfire-dropzone-file-uploader/\\\">AngularFirebase dropzone uploader</a>\\r\\n</p>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<div class=\\\"dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\" (dropped)=\\\"startUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\r\\n\\r\\n  <h3>AngularFire Drop Zone</h3>\\r\\n  <p>Drag and Drop a File</p>\\r\\n  <div class=\\\"file\\\">\\r\\n    <label class=\\\"file-label\\\">\\r\\n\\r\\n\\r\\n      <input class=\\\"file-input\\\" type=\\\"file\\\" (change)=\\\"startUpload($event.target.files)\\\">\\r\\n\\r\\n      <span class=\\\"file-cta\\\">\\r\\n        <span class=\\\"file-icon\\\">\\r\\n          <i class=\\\"fa fa-upload\\\"></i>\\r\\n        </span>\\r\\n        <span class=\\\"file-label\\\">\\r\\n          or choose a file…\\r\\n        </span>\\r\\n      </span>\\r\\n    </label>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"percentage | async as pct\\\">\\r\\n\\r\\n  <progress class=\\\"progress is-info\\\" [value]=\\\"pct\\\" max=\\\"100\\\">\\r\\n  </progress>\\r\\n\\r\\n  {{ pct | number }}%\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"(snapshot | async) as snap\\\">\\r\\n  {{ snap.bytesTransferred | fileSize }} of {{ snap.totalBytes | fileSize }}\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"downloadURL | async as url\\\">\\r\\n    <h3>Results!</h3>\\r\\n    <img [src]=\\\"url\\\">\\r\\n    <br>\\r\\n    <a [href]=\\\"url\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Download Me!</a>\\r\\n  </div>\\r\\n  <hr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <button (click)=\\\"task.pause()\\\" class=\\\"button is-warning\\\" [disabled]=\\\"!isActive(snap)\\\">Pause</button>\\r\\n  <button (click)=\\\"task.cancel()\\\" class=\\\"button is-danger\\\" [disabled]=\\\"!isActive(snap)\\\">Cancel</button>\\r\\n  <button (click)=\\\"task.resume()\\\" class=\\\"button is-info\\\" [disabled]=\\\"!(snap?.state === 'paused')\\\">Resume</button>\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \".dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  font-weight: 200;\\n  height: 300px;\\n  border: 2px dashed #f16624;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0; }\\n  .dropzone.hovering {\\n    border: 2px solid #f16624;\\n    color: #dadada !important; }\\n  .dropzone .file-label {\\n    font-size: 1.2em; }\\n  progress::-webkit-progress-value {\\n  transition: width 0.1s ease; }\\n  img {\\n  width: 250px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AngularFireStorage,\r\n  AngularFireUploadTask\r\n} from 'angularfire2/storage';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'upload-page',\r\n  templateUrl: './upload-page.component.html',\r\n  styleUrls: ['./upload-page.component.scss']\r\n})\r\nexport class UploadPageComponent {\r\n  // Main task\r\n  task: AngularFireUploadTask;\r\n\r\n  // Progress monitoring\r\n  percentage: Observable<number>;\r\n\r\n  snapshot: Observable<any>;\r\n\r\n  // Download URL\r\n  downloadURL: Observable<string>;\r\n\r\n  // State for dropzone CSS toggling\r\n  isHovering: boolean;\r\n\r\n  constructor(\r\n    private storage: AngularFireStorage,\r\n    private db: AngularFirestore\r\n  ) {}\r\n\r\n  toggleHover(event: boolean) {\r\n    this.isHovering = event;\r\n  }\r\n\r\n  startUpload(event: FileList) {\r\n    // The File object\r\n    const file = event.item(0);\r\n\r\n    // Client-side validation example\r\n    if (file.type.split('/')[0] !== 'image') {\r\n      console.error('unsupported file type :( ');\r\n      return;\r\n    }\r\n\r\n    // The storage path\r\n    const path = `test/${new Date().getTime()}_${file.name}`;\r\n\r\n    // Totally optional metadata\r\n    const customMetadata = { app: 'My AngularFire-powered PWA!' };\r\n\r\n    // The main task\r\n    this.task = this.storage.upload(path, file, { customMetadata });\r\n\r\n    // Progress monitoring\r\n    this.percentage = this.task.percentageChanges();\r\n    this.snapshot = this.task.snapshotChanges().pipe(\r\n      tap(snap => {\r\n        if (snap.bytesTransferred === snap.totalBytes) {\r\n          // Update firestore on completion\r\n          this.db.collection('photos').add({ path, size: snap.totalBytes });\r\n        }\r\n      }),\r\n      finalize(() => this.downloadURL = this.storage.ref(path).getDownloadURL() )\r\n    );\r\n\r\n\r\n    // The file's download URL\r\n  }\r\n\r\n  // Determines if the upload task is active\r\n  isActive(snapshot) {\r\n    return (\r\n      snapshot.state === 'running' &&\r\n      snapshot.bytesTransferred < snapshot.totalBytes\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UploadPageComponent } from './upload-page/upload-page.component';\r\nimport { DropZoneDirective } from './drop-zone.directive';\r\nimport { FileSizePipe } from './file-size.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [UploadPageComponent, DropZoneDirective, FileSizePipe]\r\n})\r\nexport class UploadsModule { }\r\n","module.exports = \"<div class=\\\"basic-note\\\">\\n    <h3>{{ usr.displayName }}/{{usr.company}}</h3>\\n    <p>{{ usr.phone }}</p>\\n    <p>{{ usr.email }}</p>\\n    <span class=\\\"button is-small is-info\\\" (click)='toggleAdmin(user?.isAdmin)'>\\n    Admin: {{usr.isAdmin}}<i class=\\\"fa fa-user\\\" style=\\\"margin-left: 5px;\\\"></i>\\n  </span>\\n  <!--  <span class=\\\"button is-small is-danger\\\" (click)='deleteUser(user?.id)'>Delete</span> -->\\n    <hr class=\\\"dbline\\\">\\n</div>\"","module.exports = \"hr.dbline {\\n  border-top: 3px double #8c8b8b; }\\n\"","import { Component, Input } from '@angular/core';\nimport { UsersService } from '../users.service';\n\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.scss']\n})\nexport class UserDetailsComponent {\n\n  @Input() usr: any;\n\n  constructor(private usersService: UsersService) { }\n\nmodifyUser(){\n  if (this.usr.id) {\n    this.usersService.updateUser(this.usr.id, {\n      //userdata\n\n     });\n  } else {\n    console.error('Note missing ID!');\n  }\n}\n\ntoggleAdmin(val: boolean) {\n  if (this.usr.id) {\n    this.usersService.updateUser(this.usr.id, { isAdmin: !this.usr.isAdmin });\n  } else {\n    console.error('User missing ID!');\n  }\n}\n  deleteUser(uid: string) {\n    this.usersService.deleteUser(uid);\n  }\n\n}\n","module.exports = \"<div class=\\\"box\\\" >\\n    <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\n            <!-- template will replace this div -->\\n    </div>\\n  </div>\\n  \\n  <!-- User NOT logged in -->\\n  <ng-template #guest class=\\\"box\\\">\\n    <h3>GUEST</h3>\\n    <p class=\\\"card-text\\\">You must be registered, logged in and admin to manage users</p>\\n    <button class=\\\"button\\\" routerLink=\\\"/login\\\">Login/Register</button>\\n  </ng-template>\\n  \\n  <!-- User logged in -->\\n  <ng-template #authenticated>\\n    <div *ngIf=\\\"auth.user | async as user\\\">\\n      <div *ngIf=\\\"user.isAdmin;else noadmin\\\">\\n        <div *ngFor=\\\"let usr of users | async\\\">\\n              <user-details [usr]=\\\"usr\\\"></user-details>\\n          </div>\\n      </div>\\n     </div>\\n  </ng-template>\\n\\n    <ng-template #noadmin class=\\\"box\\\">\\n        <h3></h3>\\n        <p class=\\\"card-text\\\">You must be admin to manage users.</p>\\n        <p class=\\\"card-text\\\">Contact your administrator to get admin status.</p>\\n    </ng-template>\\n    \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  users: Observable<any[]>;\n  content: string;\n\n  constructor(private usrsService: UsersService, public auth: AuthService) { }\n\n  ngOnInit() {\n    this.users = this.usrsService.getData();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { UsersService } from './users.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [UserListComponent, UserDetailsComponent],\n  providers: [UsersService]\n})\nexport class UsersModule { }\n","import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\n\nexport class UsersService {\n\n  usersCollection: AngularFirestoreCollection<any>;\n  userDocument:   AngularFirestoreDocument<any>;\n\n\n  constructor(private afs: AngularFirestore) { \n    this.usersCollection = this.afs.collection('users', (ref) => ref.orderBy('email', 'desc'));\n\n  }\n\n  getData(): Observable<any[]> {\n    // ['added', 'modified', 'removed']\n    return this.usersCollection.snapshotChanges().pipe(\n      map((actions) => {\n        return actions.map((a) => {\n          const data = a.payload.doc.data();\n          return { id: a.payload.doc.id, ...data };\n        });\n      })\n    );\n  }\n\n  getUser(uid: string) {\n    return this.afs.doc<any>(`users/${uid}`);\n  }\n\n  createUser(displayName: string, email: string) {\n    const user = {\n      displayName,\n      email,\n      isAdmin: false,\n    };\n    return this.usersCollection.add(user);\n  }\n\n  updateUser(uid: string, data: any) {\n    return this.getUser(uid).update(data);\n  }\n\n  deleteUser(uid: string) {\n    return this.getUser(uid).delete();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyBKSxO8Ola_ZhQlY6bD9XCwwWGqxOBJZ1o\",\r\n    authDomain: \"totech-841db.firebaseapp.com\",\r\n    databaseURL: \"https://totech-841db.firebaseio.com\",\r\n    projectId: \"totech-841db\",\r\n    storageBucket: \"totech-841db.appspot.com\",\r\n    messagingSenderId: \"559544589098\"\r\n  }\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n});\r\n"],"sourceRoot":""}